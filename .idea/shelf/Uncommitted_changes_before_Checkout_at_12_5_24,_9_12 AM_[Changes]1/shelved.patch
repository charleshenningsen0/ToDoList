Index: mainLogic.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from PyQt6.QtWidgets import QApplication, QMainWindow\nimport csv\nimport re\nfrom gui import Ui_TODOLIST\nfrom guiHistory import *\nfrom historyLogic import *\n\nimport main\n\n\nclass mainLogic(QMainWindow, Ui_TODOLIST):\n    mainIsOpen = True\n    tasks = []\n    doneButtons = []\n    tasksIndex = 0\n    def __init__(self):\n\n        super().__init__()\n        self.setupUi(self)\n        #after visible or before, then set the labels to previous labels.If label doesnt exist, set to invisible\n        #Task Label\n        self.task1Label.setVisible(False)\n        self.task2Label.setVisible(False)\n        self.task3Label.setVisible(False)\n        self.task4Label.setVisible(False)\n        self.task5Label.setVisible(False)\n        self.task6Label.setVisible(False)\n        self.task7Label.setVisible(False)\n        self.task8Label.setVisible(False)\n        self.task9Label.setVisible(False)\n        self.task10Label.setVisible(False)\n\n        # adding taskLabels to list\n        self.tasks.append(self.task1Label)\n        self.tasks.append(self.task2Label)\n        self.tasks.append(self.task3Label)\n        self.tasks.append(self.task4Label)\n        self.tasks.append(self.task5Label)\n        self.tasks.append(self.task6Label)\n        self.tasks.append(self.task7Label)\n        self.tasks.append(self.task8Label)\n        self.tasks.append(self.task9Label)\n        self.tasks.append(self.task10Label)\n\n\n        #done buttons\n        self.doneButton1.setVisible(False)\n        self.doneButton2.setVisible(False)\n        self.doneButton3.setVisible(False)\n        self.doneButton4.setVisible(False)\n        self.doneButton5.setVisible(False)\n        self.doneButton6.setVisible(False)\n        self.doneButton7.setVisible(False)\n        self.doneButton8.setVisible(False)\n        self.doneButton9.setVisible(False)\n        self.doneButton10.setVisible(False)\n\n        #adding done buttons to list\n        self.doneButtons.append(self.doneButton1)\n        self.doneButtons.append(self.doneButton2)\n        self.doneButtons.append(self.doneButton3)\n        self.doneButtons.append(self.doneButton4)\n        self.doneButtons.append(self.doneButton5)\n        self.doneButtons.append(self.doneButton6)\n        self.doneButtons.append(self.doneButton7)\n        self.doneButtons.append(self.doneButton8)\n        self.doneButtons.append(self.doneButton9)\n        self.doneButtons.append(self.doneButton10)\n\n\n\n        #eddit buttons might remove\n        self.task1EditButton.setVisible(False)\n        self.task2EditButton.setVisible(False)\n        self.task3EditButton.setVisible(False)\n        self.task4EditButton.setVisible(False)\n        self.task5EditButton.setVisible(False)\n        self.task6EditButton.setVisible(False)\n        self.task7EditButton.setVisible(False)\n        self.task8EditButton.setVisible(False)\n        self.task9EditButton.setVisible(False)\n        self.task10EditButton.setVisible(False)\n        self.lineEdit1.setVisible(False)\n        self.lineEdit2.setVisible(False)\n        self.lineEdit3.setVisible(False)\n        self.lineEdit4.setVisible(False)\n        self.lineEdit5.setVisible(False)\n        self.lineEdit6.setVisible(False)\n        self.lineEdit7.setVisible(False)\n        self.lineEdit8.setVisible(False)\n        self.lineEdit9.setVisible(False)\n        self.lineEdit10.setVisible(False)\n\n        #Open file, read lines, pop out compleded tasks, then if length of new lsit is > 10, for i in ragne(len(lines)-10, len(line): add task to task labels\n        # else for len of new list, add to text labels #Swithc to csv\n        with open(\"tasksFile.txt\", \"r\") as file:\n            lines = file.readlines()\n        # print(lines)\n        uncompletedTasks = []\n        RegExCompletedTask = \"^.*True\"\n        for line in lines:\n            if re.search(RegExCompletedTask, line):\n                uncompletedTasks.append(line)\n        print(uncompletedTasks)\n\n        if len(uncompletedTasks) == 0:\n            pass\n            #nothing\n        if len(uncompletedTasks) > 10:\n            for i in range(len(lines) - 10, len(lines)):\n                # self.tasks[i].setVisible(True)\n                text = lines[i][6:]\n                print(text)\n                # self.tasks[i].setText()\n\n\n        self.task1EditButton.clicked.connect(lambda : self.editTask())\n        self.task2EditButton.clicked.connect(lambda: self.editTask())\n        self.task3EditButton.clicked.connect(lambda: self.editTask())\n        self.task4EditButton.clicked.connect(lambda: self.editTask())\n        self.task5EditButton.clicked.connect(lambda: self.editTask())\n        self.task6EditButton.clicked.connect(lambda: self.editTask())\n        self.task7EditButton.clicked.connect(lambda: self.editTask())\n        self.task8EditButton.clicked.connect(lambda: self.editTask())\n        self.task9EditButton.clicked.connect(lambda: self.editTask())\n        self.task10EditButton.clicked.connect(lambda: self.editTask())\n\n\n        self.doneButton1.clicked.connect(lambda: self.completeTask(0))\n        self.doneButton2.clicked.connect(lambda: self.completeTask(1))\n        self.doneButton3.clicked.connect(lambda: self.completeTask(2))\n        self.doneButton4.clicked.connect(lambda: self.completeTask(3))\n        self.doneButton5.clicked.connect(lambda: self.completeTask(4))\n        self.doneButton6.clicked.connect(lambda: self.completeTask(5))\n        self.doneButton7.clicked.connect(lambda: self.completeTask(6))\n        self.doneButton8.clicked.connect(lambda: self.completeTask(7))\n        self.doneButton9.clicked.connect(lambda: self.completeTask(8))\n        self.doneButton10.clicked.connect(lambda: self.completeTask(9))\n\n\n        self.addTaskButton.clicked.connect(lambda : self.addTask())\n\n\n        self.HistoryWindowButton.clicked.connect(lambda : self.openHistory())\n\n\n#creating a complete task event for each done button!!!\n\n    #need to add completed task to completed task file for history\n    #remove task from current tasks, appdend end,\n    # nd in history display form bottom up so completed are at the top\n\n    #Author: \"Google AI\"\n    #Title: \"Overview\"\n    #Date: 12/04/24\n    #Location: https://www.google.com/search?q=how+to+remove+a+row+from+a+text+file+in+python+with+regex+in+a+loop&client=safari&sca_esv=fdf7728f28b59cda&rls=en&sxsrf=ADLYWILL1TOQsrtEtcCGjoPIB1TlEBccJw%3A1733342337619&ei=gbRQZ__DJez_ptQP8-3juQQ&ved=0ahUKEwi_iLuy846KAxXsv4kEHfP2OEcQ4dUDCA8&uact=5&oq=how+to+remove+a+row+from+a+text+file+in+python+with+regex+in+a+loop&gs_lp=Egxnd3Mtd2l6LXNlcnAiQ2hvdyB0byByZW1vdmUgYSByb3cgZnJvbSBhIHRleHQgZmlsZSBpbiBweXRob24gd2l0aCByZWdleCBpbiBhIGxvb3BI_zRQiBhYojNwAngBkAEBmAGfAaABuBGqAQQ5LjEzuAEDyAEA-AEBmAIPoAKODMICChAAGLADGNYEGEfCAgUQIRigAcICBRAhGKsCmAMAiAYBkAYIkgcENS4xMKAH3k0&sclient=gws-wiz-serp\n\n    def completeTask(self, index):\n        #maybe use task ID instead so you can habe the same name of task\n        self.addTasklabel.setStyleSheet(\"color: rgb(255, 255, 255);\")\n        self.addTasklabel.setText(\"Enter a task!\")\n        #look through tasks, find task completed, and modify completed to true\n        with open(\"tasksFile.txt\", \"r\") as file:\n            lines = file.readlines()\n\n        regExTask = f\"^Task: {self.tasks[index].text()}\"\n\n\n        with open(\"tasksFile.txt\", \"w\") as file:\n            for line in lines:\n                if not re.search(regExTask, line):\n                    file.write(line)\n            file.write(f\"Task: {self.tasks[index].text()}, Completed: {True}\\n\")\n\n        if self.tasksIndex - 1 == index:\n            self.tasks[index].setText(\"\")\n            self.doneButtons[index].setVisible(False)\n        else:\n            for i in range(index, self.tasksIndex - 1):\n                self.tasks[i].setText(self.tasks[i + 1].text())\n\n        self.tasks[self.tasksIndex - 1].setText(\"\")\n        self.doneButtons[self.tasksIndex - 1].setVisible(False)\n\n        self.tasksIndex -= 1\n\n    # for clear button have pop or cheering sound\n    #Try to just have a popup for the history!\n    #need to add current tasks file and when init, insert current task file,\n    def openHistory(self):\n        #need to retrieve the tasks in a file, when switching from history to home\n        geometry = self.geometry()\n        self.historyWindow = historyLogic()\n        self.historyWindow.setGeometry(geometry)\n        self.historyWindow.show()\n\n\n    def editTask(self):\n        pass\n        #add remove features\n        #Maybe actually pass on this, focus on checking off tasks and adding multiple tasks\n\n\n    def addTask(self):\n        try:\n            task = self.addTasklineEdit.text()\n            if task == '':\n                raise TypeError\n            self.tasks[self.tasksIndex].setText(task)\n            self.tasks[self.tasksIndex].setVisible(True)\n            self.doneButtons[self.tasksIndex].setVisible(True)\n        except TypeError:\n            self.addTasklabel.setText(\"Enter a valid task!\")\n        except IndexError:\n            #Catches if there are 10 tasks already, tells user too many tasks\n            self.addTasklabel.setText(\"You have to many tasks!\")\n            self.addTasklabel.setStyleSheet(\"color: rgb(255, 0, 0);\")\n            self.addTasklineEdit.setText(\"\")\n        else:\n            with open('tasksFile.txt', \"a\") as taskFile:\n                # csv_writer = csv.writer(taskFile)\n                # csv_writer.writerow(task)\n                #maybe add time completed, or time added to file/created\n                taskFile.write(f\"Task: {task}, Completed: {False}\\n\")\n\n            self.addTasklineEdit.setText(\"\")\n            self.tasksIndex += 1\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/mainLogic.py b/mainLogic.py
--- a/mainLogic.py	(revision 86f84b5ef10ef97b65dfce1380766d7be79c64e3)
+++ b/mainLogic.py	(date 1733411538347)
@@ -91,6 +91,8 @@
         self.lineEdit9.setVisible(False)
         self.lineEdit10.setVisible(False)
 
+        #see if you can merge pop up to main
+
         #Open file, read lines, pop out compleded tasks, then if length of new lsit is > 10, for i in ragne(len(lines)-10, len(line): add task to task labels
         # else for len of new list, add to text labels #Swithc to csv
         with open("tasksFile.txt", "r") as file:
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"61446308-9c63-429c-8556-13dd468d10a5\" name=\"Changes\" comment=\"completeTask as one function!!!\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/guiHistory.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/guiHistory.py\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/historyLogic.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/historyLogic.py\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/historyWindow.ui\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/historyWindow.ui\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/main.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/main.py\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/mainLogic.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/mainLogic.py\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/tasksFile.txt\" beforeDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Python Script\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\n      <map>\n        <entry key=\"$PROJECT_DIR$\" value=\"main\" />\n      </map>\n    </option>\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"GitHubPullRequestSearchHistory\">{\n  &quot;lastFilter&quot;: {\n    &quot;state&quot;: &quot;OPEN&quot;,\n    &quot;assignee&quot;: &quot;charleshenningsen0&quot;\n  }\n}</component>\n  <component name=\"GithubPullRequestsUISettings\">{\n  &quot;selectedUrlAndAccountId&quot;: {\n    &quot;url&quot;: &quot;https://github.com/charleshenningsen0/ToDoList.git&quot;,\n    &quot;accountId&quot;: &quot;fcc261d9-d8b8-4cfd-9037-a4901c0553f0&quot;\n  }\n}</component>\n  <component name=\"ProjectColorInfo\">{\n  &quot;associatedIndex&quot;: 0\n}</component>\n  <component name=\"ProjectId\" id=\"2p62Ma8hl98Uw2NtTpcgYvHEATh\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\n  </component>\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\"><![CDATA[{\n  \"keyToString\": {\n    \"Python.gui.executor\": \"Run\",\n    \"Python.historyLogic.executor\": \"Run\",\n    \"Python.logic.executor\": \"Run\",\n    \"Python.main.executor\": \"Run\",\n    \"Python.mainLogic.executor\": \"Run\",\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\n    \"RunOnceActivity.git.unshallow\": \"true\",\n    \"git-widget-placeholder\": \"pop-up\",\n    \"settings.editor.selected.configurable\": \"inlay.hints\"\n  }\n}]]></component>\n  <component name=\"RunManager\" selected=\"Python.main\">\n    <configuration name=\"gui\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"ToDoList\" />\n      <option name=\"ENV_FILES\" value=\"\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/gui.py\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\n      <option name=\"MODULE_MODE\" value=\"false\" />\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\n      <option name=\"INPUT_FILE\" value=\"\" />\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"historyLogic\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"ToDoList\" />\n      <option name=\"ENV_FILES\" value=\"\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/historyLogic.py\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\n      <option name=\"MODULE_MODE\" value=\"false\" />\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\n      <option name=\"INPUT_FILE\" value=\"\" />\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"main\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"ToDoList\" />\n      <option name=\"ENV_FILES\" value=\"\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/main.py\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\n      <option name=\"MODULE_MODE\" value=\"false\" />\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\n      <option name=\"INPUT_FILE\" value=\"\" />\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"mainLogic\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"ToDoList\" />\n      <option name=\"ENV_FILES\" value=\"\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/mainLogic.py\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\n      <option name=\"MODULE_MODE\" value=\"false\" />\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\n      <option name=\"INPUT_FILE\" value=\"\" />\n      <method v=\"2\" />\n    </configuration>\n    <recent_temporary>\n      <list>\n        <item itemvalue=\"Python.main\" />\n        <item itemvalue=\"Python.mainLogic\" />\n        <item itemvalue=\"Python.historyLogic\" />\n        <item itemvalue=\"Python.gui\" />\n        <item itemvalue=\"Python.mainLogic\" />\n      </list>\n    </recent_temporary>\n  </component>\n  <component name=\"SharedIndexes\">\n    <attachedChunks>\n      <set>\n        <option value=\"bundled-python-sdk-fb887030ada0-aa17d162503b-com.jetbrains.pycharm.community.sharedIndexes.bundled-PC-243.21565.199\" />\n      </set>\n    </attachedChunks>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"61446308-9c63-429c-8556-13dd468d10a5\" name=\"Changes\" comment=\"\" />\n      <created>1732072156588</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1732072156588</updated>\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"task completion works\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1733201470544</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1733201470544</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"task completion works\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1733201630693</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1733201630694</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"3\" />\n    <servers />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State>\n              <option name=\"FILTERS\">\n                <map>\n                  <entry key=\"branch\">\n                    <value>\n                      <list>\n                        <option value=\"pop-up\" />\n                      </list>\n                    </value>\n                  </entry>\n                </map>\n              </option>\n            </State>\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <MESSAGE value=\"task completion works\" />\n    <MESSAGE value=\"completeTask as one function!!!\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"completeTask as one function!!!\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 86f84b5ef10ef97b65dfce1380766d7be79c64e3)
+++ b/.idea/workspace.xml	(date 1733411538350)
@@ -4,14 +4,9 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="61446308-9c63-429c-8556-13dd468d10a5" name="Changes" comment="completeTask as one function!!!">
+    <list default="true" id="61446308-9c63-429c-8556-13dd468d10a5" name="Changes" comment="Switched to pop up history, started file saving, before switch to csv">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/guiHistory.py" beforeDir="false" afterPath="$PROJECT_DIR$/guiHistory.py" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/historyLogic.py" beforeDir="false" afterPath="$PROJECT_DIR$/historyLogic.py" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/historyWindow.ui" beforeDir="false" afterPath="$PROJECT_DIR$/historyWindow.ui" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/main.py" beforeDir="false" afterPath="$PROJECT_DIR$/main.py" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/mainLogic.py" beforeDir="false" afterPath="$PROJECT_DIR$/mainLogic.py" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/tasksFile.txt" beforeDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -200,7 +195,15 @@
       <option name="project" value="LOCAL" />
       <updated>1733201630694</updated>
     </task>
-    <option name="localTasksCounter" value="3" />
+    <task id="LOCAL-00003" summary="Switched to pop up history, started file saving, before switch to csv">
+      <option name="closed" value="true" />
+      <created>1733345972304</created>
+      <option name="number" value="00003" />
+      <option name="presentableId" value="LOCAL-00003" />
+      <option name="project" value="LOCAL" />
+      <updated>1733345972304</updated>
+    </task>
+    <option name="localTasksCounter" value="4" />
     <servers />
   </component>
   <component name="Vcs.Log.Tabs.Properties">
@@ -229,6 +232,7 @@
   <component name="VcsManagerConfiguration">
     <MESSAGE value="task completion works" />
     <MESSAGE value="completeTask as one function!!!" />
-    <option name="LAST_COMMIT_MESSAGE" value="completeTask as one function!!!" />
+    <MESSAGE value="Switched to pop up history, started file saving, before switch to csv" />
+    <option name="LAST_COMMIT_MESSAGE" value="Switched to pop up history, started file saving, before switch to csv" />
   </component>
 </project>
\ No newline at end of file
